<?php

namespace JLM\TransmitterBundle\Entity;

use Doctrine\ORM\EntityRepository;
use JLM\Defaultbundle\Entity\Search;

/**
 * TransmitterRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class TransmitterRepository extends EntityRepository
{
	private $transmitters;
	
	private function _getQbById($id)
	{
		return $this->createQueryBuilder('a')
				->select('a')
				->leftJoin('a.userGroup','b')
				->leftJoin('a.model','c')
				->where('a.id = ?1')
				->setParameter(1,$id);
		
	}
	
	public function getArrayById($id)
	{
		$qb = $this->_getQbById($id);
		$results = $qb->getQuery()->getArrayResult();
		$result = $results[0];
		return $result;
	}
	
	public function getById($id)
	{
		$qb = $this->_getQbById($id);
		$results = $qb->getQuery()->getResult();
		return $results[0];
	}
	
	public function getCountByUserGroup(UserGroup $userGroup)
	{
		$qb = $this->createQueryBuilder('a')
			->select('COUNT(a)')
			->leftJoin('a.userGroup','b')
			->where('b = ?1')
			->setParameter(1,$userGroup);
		return $qb->getQuery()->getSingleScalarResult();
	}
	
	public function getFromSite($id)
	{
		$qb = $this->createQueryBuilder('a')
		->leftJoin('a.userGroup','b')
		->leftJoin('b.site','c')
		->where('c.id = ?1')
		->orderBy('a.number','asc')
		->setParameter(1,$id);
		return $qb;
	}
	
	/**
	 * {@inheritdoc}
	 */
	protected function getSearchQb()
	{
		return $this->createQueryBuilder('a')
			->select('a')
			->leftJoin('a.model','b');
	}
	
	/**
	 * {@inheritdoc}
	 */
	protected function getSearchParams()
	{
		return array('a.number','a.userName','b.text');
	}
	
	/**
	 * {@inheritdoc}
	 */
	protected function getSearchOrderBy()
	{
		return array('a.number'=>'ASC');
	}
}
