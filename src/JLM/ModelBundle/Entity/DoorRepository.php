<?php

namespace JLM\ModelBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * SiteRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class DoorRepository extends EntityRepository
{
	
	public function getStopped($limit = null, $offset = null)
	{
		$qb = $this->createQueryBuilder('a')
			->select('a,b,c,d,e,f,g,h,i')
			->leftJoin('a.site','b')
			->leftJoin('b.address','c')
			->leftJoin('c.city','d')
			->leftJoin('a.interventions','e')
			->leftJoin('e.shiftTechnicians','f')
			->leftJoin('a.contracts','g')
			->leftJoin('g.trustee','h')
			->leftJoin('a.type','i')
			->where('a.stopped = 1');
		if ($limit !== null)
			$qb->setMaxResults($limit);
		if ($offset !== null)
			$qb->setFirstResult($offset);
		return $qb->getQuery()->getResult();
	}
	
	public function getCountStopped()
	{
		$qb = $this->createQueryBuilder('d')
			->select('COUNT(d)')
			->where('d.stopped = 1');
		return $qb->getQuery()->getSingleScalarResult();
	}

	public function search($query)
	{
		$qb = $this->createQueryBuilder('d')
		->leftJoin('d.site','s')
		->leftJoin('s.address','a')
		->leftJoin('a.city','c')
		->where('a.street LIKE :querystreet')
		->orWhere('d.street LIKE :querystreet')
		->orWhere('c.name LIKE :querycity')
		->setParameter('querystreet', '%'.$query.'%')
		->setParameter('querycity', $query.'%')
		;
		
		return $qb->getQuery()->getResult();
	}
	
	public function searchResult($query, $limit = 8)
	{
		
		$res = $this->search($query);
		
		// Structure
		// array(IdPorte,Affaire,IdSyndic,Syndic,Adresse de facturation)
		$r2 = array();
		foreach ($res as $r)
		{
			$trustee = $r->getSite()->getTrustee();
			$reference = '';
			if ($r->getSite()->getGroupNumber())
				$reference .= 'Groupe : '.$r->getSite()->getGroupNumber();
			$r2[] = array(
						'door'          => ''.$r->getId(),
						'label'        => ''.$r,
						'doorCp'		=> ''.$r->toString(),
						'vat'			=> $r->getSite()->getVat()->getRate(),
						'trustee'       => ''.$trustee->getId(),
						'trusteeName'   => ''.$trustee,
						'trusteeAddress'=> ''.$trustee->getAddress()->toString(),
						'trusteeBillingAddress'=> ''.$trustee->getAddressForBill()->toString(),
						'accountNumber'=> $trustee->getAccountNumber(),
						'doorDetails' => $r->getType().' - '.$r->getLocation(),
						'siteCp'=> $r->getSite()->toString(),
						'prelabel'=> $r->getBillingPrelabel(),
						'reference'=>$reference,
					);
		}
		return $r2;
	}
	
	public function getTotal()
	{
		$qb = $this->createQueryBuilder('d')
		->select('COUNT(d)');
		return $qb->getQuery()->getSingleScalarResult();
	}
}