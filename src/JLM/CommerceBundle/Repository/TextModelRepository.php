<?php

/*
 * This file is part of the JLMCommerceBundle package.
 *
 * (c) Emmanuel Bernaszuk <emmanuel.bernaszuk@kw12er.com>
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */

namespace JLM\CommerceBundle\Repository;

use Doctrine\ORM\EntityRepository;

/**
 * TextModelRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 * 
 * @author Emmanuel Bernaszuk <emmanuel.bernaszuk@kw12er.com>
 */
class TextModelRepository extends EntityRepository
{
	public function getByNamespace($namespace, $query)
	{
		$results = $this->createQueryBuilder('a')
			->where('a.namespace = ?1')
			->andWhere('a.text LIKE ?2')
			->setParameter(1, $namespace)
			->setParameter(2,'%'.$query.'%')
			->getQuery()
			->getResult();
		$out = array();
		foreach($results as $result)
		{
			$out[] = $result->getText();
		}
		 
		return $out;
	}
	
	public function getOneByNamespace($namespace)
	{
		$result = $this->createQueryBuilder('a')
			->where('a.namespace = ?1')
			->setParameter(1, $namespace)
			->getQuery()
			->getSingleResult();

		return $result->getText();
	}
	
	public function searchResult($query, $limit = 8)
	{
		$class = $this->getClassName();
		var_dump($class); exit;
		$results = $this->createQueryBuilder('m')
	   		->where('m.text LIKE :term')
	   		->setParameter('term','%'.$query.'%')
	   		->getQuery()
	   		->getResult();
   		$out = array();
   		foreach($results as $result)
   		{
   			$out[] = $result->getText();
   		}
   		
   		return $out;
	}
}