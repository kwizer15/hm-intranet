{% extends "JLMOfficeBundle::layout.html.twig" %}
{% form_theme form 'JLMOfficeBundle:Form:field_row.html.twig' %}
{% block content %}
<h1>Nouveau devis</h1>
<div class="alert"><strong>Attention !</strong> blablablabla</div>
<form action="{{ path('quote_create') }}" method="post" {{ form_enctype(form) }} class="form-horizontal">
    <fieldset>
    {{ form_widget(form) }}
	<div class="form-actions">
	 
	   <button type="submit" class="btn btn-primary"><i class="icon-pencil icon-white"></i> Enregistrer les modifications</button>
	</div>
</fieldset>
{% endblock %}

{% block javascripts %}
{{ parent() }}
<script>
var lineCount = '{{ form.lines | length }}';

function openDesc() {
		var plus = $(this).parent().next().attr('value') == 1;
		plus = !plus;
		$(this).children("i")
		       .toggleClass("icon-minus-sign",plus)
		       .toggleClass("icon-plus-sign",!plus)
		       .parent().parent().next().attr('value',plus?'1':'0')
		       .next().slideToggle();
	    return false;
}

function totalLine(line)
{
	var qty = $(line + "_quantity").val().replace(',','.');
	var up = $(line + "_unitPrice").val().replace(',','.');
	var dc = $(line + "_discount").val().replace(',','.');
	var total = qty*(up*((100-dc)/100));
	$(line + "_quantity").val(number_format(qty,0,',',' '));
	$(line + "_unitPrice").val(number_format(up,2,',',' '));
	$(line + "_discount").val(number_format(dc,0,',',' '));
	$(line + " .uneditable-input").html(number_format(total,2,',',' '));
	
}

$(document).ready(function() {
	$("#quote_followerCp").autocomplete({
		source:['Yohann Martinez','Emmanuel Bernaszuk','Jean-Louis Martinez','Nadine Martinez','Aurélie Costalat']
	});

	$("#quote_doorCp").autocomplete({
		source: function(request,response){
			return $.post('{{ path('quote_auto_door') }}',request,
					function( data ) { response( data ); },'json'
			);
	    }
	    , select: function (event, ui) {
		    
		 //   var m = ui.item.label.split('|');
		    $("#quote_door").val(ui.item.door);
		    $("#quote_doorCp").val(ui.item.label);
		    $("#quote_trustee").val(ui.item.trustee);
		    $("#quote_trusteeName").val(ui.item.trusteeName);
		    $("#quote_trusteeAddress").val(ui.item.trusteeAddress);
	        return false;
	      }
	    
		
	});
	$("#quote_paymentRules").attr('autocomplete','off').typeahead({
		source:['à réception de la facture', '30% à la commande, le solde fin de travaux']
	});
	$("#quote_deliveryRules").attr('autocomplete','off').typeahead({
		source:['10 à 15 jours après accord','3 à 5 semaines après accord']
	});
	
	$(".show-description").click(openDesc);

	$(".add-line").click(function(){
		var lineList = $(this).parent().parent().parent().next();
		lineList.addClass('test');
		var newWidget = lineList.attr('data-prototype');
		newWidget = newWidget.replace(/__name__/g,lineCount);
		
		$(lineList).append(newWidget);
		var line = "#quote_lines_" + lineCount;
		$(line + " .show-description").click(openDesc);
		$(line + " .remove-line").click(function(){
			$(this).parent().parent().remove();
			return false;
		});
		$(line + "_quantity, " + line + "_unitPrice, " + line + "_discount").change(function(){
			totalLine(line);
		});
		$(line + "_designation").attr('autocomplete','off').typeahead({
			source: function(query,process){
				return $.post(
					'{{ path('quote_auto_product_designation') }}',
					{'query':query}, 
					function (data) { return process(data.options);},
					'json'
				);
		    }
		    , updater: function (item) {
			    var m = item.split('|');
			    var line = "#" + this.$element.parent().parent().parent().attr("id");
			    $(line + "_reference").val(m[1]);
			    $(line + "_description").val(m[3]);
			    $(line + "_unitPrice").val(m[4]);
			    $(line + "_vat").val(m[5]);
			    totalLine(line);
			    return m[2];
		      }
		    , matcher: function (item) {
		    	var m = item.split('|');
		    	item = m[2];
		        return ~item.toLowerCase().indexOf(this.query.toLowerCase())
		      }

		    , highlighter: function (item) {
		        var query = this.query.replace(/[\-\[\]{}()*+?.,\\\^$|#\s]/g, '\\$&')
		        var m = item.split('|');
			      item = m[2];
		        return item.replace(new RegExp('(' + query + ')', 'ig'), function ($1, match) {
		          return '<strong>' + match + '</strong>'
		        })
		      },
		    items:12,});
		lineCount++;
		return false;
	});
	
	
});
</script>
{% endblock %}