<?php

/*
 * This file is part of the JLMProductBundle package.
 *
 * (c) Emmanuel Bernaszuk <emmanuel.bernaszuk@kw12er.com>
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */

namespace JLM\ProductBundle\Repository;

use JLM\DefaultBundle\Entity\SearchRepository;

/**
 * SupplierRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 * 
 * @author Emmanuel Bernaszuk <emmanuel.bernaszuk@kw12er.com>
 */
class SupplierRepository extends SearchRepository
{
	/**
	 * {@inheritdoc}
	 */
	protected function getSearchQb()
	{
		return $this->createQueryBuilder('a')->select('a,b')->leftJoin('a.contact','b');
	}
	
	/**
	 * {@inheritdoc}
	 */
	protected function getSearchParams()
	{
		return array('b.name');
	}
	
	/**
	 * Search a query
	 * @param string $query
	 * @param integer $limit
	 * @return array
	 */
	public function searchResult($query, $limit = 8)
	{
		$res = $this->search($query);
		$r2 = array();
		foreach ($res as $r)
		{
			$r2[] = ''.$r;
		}
		return $r2;
	}
	
	/**
	 * Count total suppliers
	 * @return integer
	 */
	public function getTotal()
	{
		$qb = $this->createQueryBuilder('s')->select('COUNT(s)');
		
		return (int) $qb->getQuery()->getSingleScalarResult();
	}
	
	public function getAll($limit, $offset)
	{
		$query = $this->createQueryBuilder('a')
			->leftJoin('a.contact','b')
			->orderBy('b.name','ASC')
			->setMaxResults($limit)
			->setFirstResult($offset)
		;
			
		return $query->getQuery()->getResult();
	}
}