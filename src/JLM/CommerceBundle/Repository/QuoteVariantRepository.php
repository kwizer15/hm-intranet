<?php

/*
 * This file is part of the JLMCommerceBundle package.
 *
 * (c) Emmanuel Bernaszuk <emmanuel.bernaszuk@kw12er.com>
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */

namespace JLM\CommerceBundle\Repository;

use Doctrine\ORM\EntityRepository;
use JLM\CommerceBundle\Model\QuoteInterface;
use JLM\CommerceBundle\Entity\Quote;
use JLM\CommerceBundle\Entity\QuoteVariant;

/**
 * QuoteRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 * 
 * @author Emmanuel Bernaszuk <emmanuel.bernaszuk@kw12er.com>
 */
class QuoteVariantRepository extends EntityRepository
{
	public function getCount(QuoteInterface $quote)
	{
		$qb = $this->createQueryBuilder('q')
		->select('COUNT(q)')
		->where('q.quote = :quote')
		->setParameter('quote', $quote);
		
		return (int) $qb->getQuery()
		->getSingleScalarResult();
	}
	
	public function getCountGiven()
	{
		return $this->createQueryBuilder('a')
		->where('a.state = ?1')
		->setParameter(1, QuoteVariant::STATE_GIVEN)
		->getQuery()->getResult();
	}
	
	public function getCountSended()
	{
		return $this->createQueryBuilder('a')
		->where('a.state >= ?1')
		->setParameter(1, QuoteVariant::STATE_SENDED)
		->getQuery()->getResult();
	}
}