{% extends "JLMOfficeBundle::layout.html.twig" %}
{% form_theme form 'JLMOfficeBundle:Form:field_row.html.twig' %}
{% block content %}
<h1>Nouveau devis</h1>
<div class="alert"><strong>Attention !</strong> blablablabla</div>
<form action="{{ path('quote_create') }}" method="post" {{ form_enctype(form) }} class="form-horizontal">
    <fieldset>
    {{ form_widget(form) }}
	<div class="form-actions">
	 
	   <button type="submit" class="btn btn-primary"><i class="icon-pencil icon-white"></i> Enregistrer les modifications</button>
	</div>
</fieldset>
{% endblock %}

{% block javascripts %}
{{ parent() }}
<script>
	function QuoteLine(num) {
		this.element = "#quote_lines_" + num;
	}
	
	QuoteLine.prototype = {
		constructor : QuoteLine

		, toggleDescription: function() {
			var plus = $(this.element + "_showDescription").val() == 1;
			plus = !plus;
			$(this.element + " .showDescription i")
			       .toggleClass("icon-minus-sign",plus)
			       .toggleClass("icon-plus-sign",!plus);
			$(this.element + "_showDescription").attr('value',plus?'1':'0')
			       .next().slideToggle();
		    return false;
		}

		, update : function() {
			alert('test');
			var quantity = parseInt($(this.element + "_quantity").val());
			var unitPrice = parseFloat($(this.element + "_unitPrice").val().replace(',','.'));
			var discount = parseInt($(this.element + "_discount").val());
			var vat = parseFloat($(this.element + "_vat").val().replace(',','.'));
			var total = quantity * (unitPrice * ((100 - discount)/100));
			$(this.element + "_quantity").val(number_format(this.quantity,0,',',' '));
			$(this.element + "_unitPrice").val(number_format(this.unitPrice,2,',',' '));
			$(this.element + "_discount").val(number_format(this.discount,0,',',' '));
			$(this.element + "_vat").val(number_format(this.vat,1,',',' '));			
			$(this.element + " .uneditable-input").val(number_format(this.total(),2,',',' '));
		}
	
		, remove : function(){
			$(this.element).remove();
			return false;
		}
}



var lineCount = '{{ form.lines | length }}';


$(document).ready(function() {
	$("#quote_followerCp").attr('autocomplete','off').typeahead({
		source:['Yohann Martinez','Emmanuel Bernaszuk','Jean-Louis Martinez','Nadine Martinez','Aurélie Costalat']
	});

	$("#quote_doorCp").attr('autocomplete','off').typeahead({
		source: function(query,process){return $.post('{{ path('quote_auto_door') }}',{'query':query},function (data) { return process(data.options);},'json');}
	    , updater: function (item) {
		    var m = item.split('|');
		    $("#quote_door").val(m[0]);
		    $("#quote_trustee").val(m[2]);
		    $("#quote_trusteeName").val(m[3]);
		    $("#quote_trusteeAddress").val(m[4]);
	        return m[1];
	      }
	    , matcher: function (item) {
	    	var m = item.split('|');
	    	item = m[1];
	        return ~item.toLowerCase().indexOf(this.query.toLowerCase())
	      }

	    , highlighter: function (item) {
	        var query = this.query.replace(/[\-\[\]{}()*+?.,\\\^$|#\s]/g, '\\$&')
	        var m = item.split('|');
		      item = m[1];
	        return item.replace(new RegExp('(' + query + ')', 'ig'), function ($1, match) {
	          return '<strong>' + match + '</strong>'
	        })
	      },
	    items:12,});
	$("#quote_paymentRules").attr('autocomplete','off').typeahead({
		source:['à réception de la facture', '30% à la commande, le solde fin de travaux']
	});
	$("#quote_deliveryRules").attr('autocomplete','off').typeahead({
		source:['10 à 15 jours après accord','3 à 5 semaines après accord']
	});

	$(".add-line").click(function(){
		var lineList = $(this).parent().parent().parent().next();
		lineList.addClass('test');
		var newWidget = lineList.attr('data-prototype');
		newWidget = newWidget.replace(/__name__/g,lineCount);
		
		$(lineList).append(newWidget);
		var line = "#quote_lines_" + lineCount;
		QuoteLine(lineCount);
		lineCount++;
		return false;
	});
	
	
});
</script>
{% endblock %}