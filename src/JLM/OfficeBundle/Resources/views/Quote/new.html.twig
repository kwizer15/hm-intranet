{% extends "JLMOfficeBundle::layout.html.twig" %}
{% form_theme form 'JLMOfficeBundle:Form:field_row.html.twig' %}
{% block content %}
<h1>Nouveau devis</h1>
<div class="alert"><strong>Attention !</strong> blablablabla</div>
<form action="{{ path('quote_create') }}" method="post" {{ form_enctype(form) }} class="form-horizontal">
    <fieldset>
    {{ form_widget(form) }}
	<div class="form-actions">
	 
	   <button type="submit" class="btn btn-primary"><i class="icon-pencil icon-white"></i> Enregistrer les modifications</button>
	</div>
</fieldset>
{% endblock %}

{% block javascripts %}
{{ parent() }}
<script>
var lineCount = '{{ form.lines | length }}';

function openDesc() {
		var plus = $(this).parent().next().attr('value') == 1;
		plus = !plus;
		$(this).children("i")
		       .toggleClass("icon-minus-sign",plus)
		       .toggleClass("icon-plus-sign",!plus)
		       .parent().parent().next().attr('value',plus?'1':'0')
		       .next().slideToggle();
	    return false;
}


$(document).ready(function() {
	$("#quote_followerCp").attr('autocomplete','off').typeahead({
		source:['Yohann Martinez','Emmanuel Bernaszuk','Jean-Louis Martinez','Nadine Martinez','Aurélie Costalat']
	});

	$("#quote_doorCp").attr('autocomplete','off').typeahead({
		source: function(query,process){
			return $.post(
				{{ path('quote_auto_door') }},
				{'query':query}, 
				function (data) { return process(data.options);},
				'json'
			);
	    }
	    , updater: function (item) {
	        return item
	      }
	    , matcher: function (item) {
	        return ~item.toLowerCase().indexOf(this.query.toLowerCase())
	      }

	    , sorter: function (items) {
	        var beginswith = []
	          , caseSensitive = []
	          , caseInsensitive = []
	          , item

	        while (item = items.shift()) {
	          if (!item.toLowerCase().indexOf(this.query.toLowerCase())) beginswith.push(item)
	          else if (~item.indexOf(this.query)) caseSensitive.push(item)
	          else caseInsensitive.push(item)
	        }

	        return beginswith.concat(caseSensitive, caseInsensitive)
	      }

	    , highlighter: function (item) {
	        var query = this.query.replace(/[\-\[\]{}()*+?.,\\\^$|#\s]/g, '\\$&')
	        return item.replace(new RegExp('(' + query + ')', 'ig'), function ($1, match) {
	          return '<strong>' + match + '</strong>'
	        })
	      },
	    items:12,});
	$("#quote_paymentRules").attr('autocomplete','off').typeahead({
		source:['à réception de la facture', '30% à la commande, le solde fin de travaux']
	});
	$("#quote_deliveryRules").attr('autocomplete','off').typeahead({
		source:['10 à 15 jours après accord','3 à 5 semaines après accord']
	});
	
	$("#quote_").attr('autocomplete','off').typeahead({
		source : function(query,process){
			return $.post(
				this.$element.attr('data-source'),
				{'query':query}, 
				function (data) { return process(data.options);},
				'json'
			);
	    },
	    items:12,
	});

	
	$(".show-description").click(openDesc);

	$(".add-line").click(function(){
		var lineList = $(this).parent().parent().parent().next();
		lineList.addClass('test');
		var newWidget = lineList.attr('data-prototype');
		newWidget = newWidget.replace(/__name__/g,lineCount);
		lineCount++;
		$(lineList).append(newWidget);
		$(".show-description").click(openDesc);
		$(".remove-line").click(function(){
			$(this).parent().parent().remove();
			return false;
		});
		return false;
	});

	
	
});
</script>
{% endblock %}