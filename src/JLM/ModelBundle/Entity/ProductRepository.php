<?php

namespace JLM\ModelBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * ProductRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ProductRepository extends EntityRepository
{
	public function searchDesignation($query)
	{
		
		$qb = $this->createQueryBuilder('p')
			   ->where('p.designation LIKE :query')
			   ->setParameter('query', '%'.$query.'%')
		;

		$res = $qb->getQuery()->getResult();
		return $this->returnResult($res);
		
	}
	
	public function searchReference($query)
	{
	
		$qb = $this->createQueryBuilder('p')
		->where('p.reference LIKE :query')
		->setParameter('query', '%'.$query.'%')
		;
	
		$res = $qb->getQuery()->getResult();
	
		return $this->returnResult($res);
	}
	
	private function returnResult($res)
	{
		$r2 = array();
		foreach ($res as $r)
		{
			$r2[] = $r->getId().'|'.$r->getReference().'|'.$r->getDesignation().'|'.$r->getDescription().'|'.$r->getSellPrice().'|'.$r->getVat()->getRate();
		}
		return $r2;
	}
	
	public function match($string)
	{
		if (preg_match('#^(.+) - (.+)$#',$string,$matches))
		{
			$qb = $this->createQueryBuilder('s')
				->leftJoin('s.address','a')
				->leftJoin('a.city','c')
				->where('a.street LIKE :querystreet')
				->andWhere('c.name LIKE :querycity')
				->setParameter('querystreet', $matches[2])
				->setParameter('querycity', $matches[1])
				;
			$res = $qb->getQuery()->getResult();
			if ($res)
				return $res[0];
		}
		else
			return null;
	}
}