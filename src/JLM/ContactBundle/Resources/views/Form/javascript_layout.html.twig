{% block jlm_contact_city_select_javascript %}
    <script type="text/javascript">
        $field = $('#{{ id }}');

        var $configs = {{ configs|json_encode|raw }};

        $configs = $.extend($configs, {
        	minimumInputLength: 1,
        	ajax: {
        		url: "{{ path('jlm_contact_rest_city_search') }}",
        		dataType: "json",
        		data: function (term, page) {
        			return {
        				q: term,
        				page_limit: 10
        			};
        		},
        		results: function (data, page) {
    	        	return {
    	           		results: data.cities
    	           	};
    	        }
        	},
        	{% if value is not empty %}
        	initSelection: function(element, callback) {
        		var id = $(element).val();
        		if (id!=="") {
        			$.ajax("{{ path('jlm_contact_rest_city_get') }}", {
        				dataType: "json",
        				data: {
        					id: {{ value }}
        				}
        			}).done(function(data) { callback(data); });
        		}
        	},
        	{% endif %}
	        formatResult: function (item) {
	        	return item.zip + " " + item.name;
	        },
	
	        formatSelection: function (item) {
				return item.zip + " " + item.name;
	        },
	        
	        formatNoMatches: function(term) { return "Pas de résultat pour \"" + term + "\""; },
	        
	        formatSearching: function() { return "Recherche..."; }
        });

        $field.select2($configs);
    </script>
{% endblock %}

{% block jlm_contact_person_select_javascript %}
{% javascripts
    	'@JLMContactBundle/Resources/public/modal_contact.js'
        filter='yui_js' %}
    	<script src="{{ asset_url }}"></script>
	{% endjavascripts %}
    <script type="text/javascript">
        $field = $('#{{ id }}');

        var $configs = {{ configs|json_encode|raw }};

        $configs = $.extend($configs, {
        	minimumInputLength: 1,
        	ajax: {
        		url: "{{ path('jlm_contact_rest_person_search') }}",
        		dataType: "json",
        		data: function (term, page) {
        			return {
        				q: term,
        				page_limit: 10
        			};
        		},
        		results: function (data, page) {
    	        	return {
    	           		results: data.persons
    	           	};
    	        }
        	},
        	{% if value is not empty %}
        	initSelection: function(element, callback) {
        		var id = $(element).val();
        		if (id!=="") {
        			$.ajax("{{ path('jlm_contact_rest_person_get') }}", {
        				dataType: "json",
        				data: {
        					id: {{ value }}
        				}
        			}).done(function(data) { callback(data); });
        		}
        	},
        	{% endif %}
	        formatResult: function (item) {
	        	return item.name;
	        },
	
	        formatSelection: function (item) {
				return item.name;
	        },
	        
	        formatNoMatches: function(term) { return "Pas de résultat pour \"" + term + "\""; },
	        
	        formatSearching: function() { return "Recherche..."; }
        });

        $field.select2($configs);
        $("#{{ id }}_add-person").formModal({
        	urlModal: '{{ path('jlm_contact_contact_new', {'id': 'person'}) }}',
        });
    </script>
{% endblock %}

{% block jlm_contact_corporation_select_javascript %}
{% javascripts
    	'@JLMContactBundle/Resources/public/modal_contact.js'
        filter='yui_js' %}
    	<script src="{{ asset_url }}"></script>
	{% endjavascripts %}
    <script type="text/javascript">
        $field = $('#{{ id }}');

        var $configs = {{ configs|json_encode|raw }};

        $configs = $.extend($configs, {
        	minimumInputLength: 1,
        	ajax: {
        		url: "{{ path('jlm_contact_rest_corporation_search') }}",
        		dataType: "json",
        		data: function (term, page) {
        			return {
        				q: term,
        				page_limit: 10
        			};
        		},
        		results: function (data, page) {
    	        	return {
    	           		results: data.corporations
    	           	};
    	        }
        	},
        	{% if value is not empty %}
        	initSelection: function(element, callback) {
        		var id = $(element).val();
        		if (id!=="") {
        			$.ajax("{{ path('jlm_contact_rest_corporation_get') }}", {
        				dataType: "json",
        				data: {
        					id: {{ value }}
        				}
        			}).done(function(data) { callback(data); });
        		}
        	},
        	{% endif %}
	        formatResult: function (item) {
	        	return item.name;
	        },
	
	        formatSelection: function (item) {
				return item.name;
	        },
	        
	        formatNoMatches: function(term) { return "Pas de résultat pour \"" + term + "\""; },
	        
	        formatSearching: function() { return "Recherche..."; }
        });

        $field.select2($configs);
        $("#{{ id }}_add-association").formModal({
        	urlModal: '{{ path('jlm_contact_contact_new', {'id': 'association'}) }}',
        });
        $("#{{ id }}_add-company").formModal({
        	urlModal: '{{ path('jlm_contact_contact_new', {'id': 'company'}) }}',
        });
    </script>
{% endblock %}

{% block jlm_contact_contactphonecollection_javascript %}
<script>
    var phoneCount = '{{ form|length }}';

    var removeLine = function(e) {
    	e.preventDefault();

    	var line = $(this).parent();
    	line.remove();
    }
    
    var addLine = function(e) {
    	e.preventDefault();

        var phoneList = $('.phone-list');
        var newWidget = phoneList.attr('data-prototype');
        newWidget = newWidget.replace(/__name__/g, phoneCount);
        phoneCount++;
        phoneList.append(newWidget);
        $('.remove-phone').click(removeLine);
    }

    $(document).ready(function() {
        $('#add-another-phone').click(addLine);
        $('.remove-phone').click(removeLine);
    })
</script>
{% endblock %}