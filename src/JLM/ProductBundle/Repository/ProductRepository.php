<?php

namespace JLM\ProductBundle\Repository;

use JLM\DefaultBundle\Entity\SearchRepository;

/**
 * ProductRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ProductRepository extends SearchRepository
{	
	/**
	 * {@inheritdoc}
	 */
	protected function getSearchQb()
	{
		return $this->createQueryBuilder('a');
	}
	
	/**
	 * {@inheritdoc}
	 */
	protected function getSearchParams()
	{
		return array('a.designation','a.reference');
	}
	
	public function searchDesignation($query)
	{
		
		$qb = $this->createQueryBuilder('p')
			   ->where('p.designation LIKE :query')
			   ->setParameter('query', '%'.$query.'%')
		;

		$res = $qb->getQuery()->getResult();
		return $this->returnResult($res);
		
	}
	
	public function searchReference($query)
	{
	
		$qb = $this->createQueryBuilder('p')
		->where('p.reference LIKE :query')
		->setParameter('query', '%'.$query.'%')
		;
	
		$res = $qb->getQuery()->getResult();
	
		return $this->returnResult($res);
	}
	
	private function returnResult($res)
	{
		$r2 = array();
		foreach ($res as $r)
		{	
			$r2[] = array(
					'label'=>$r->getReference().' | '.$r->getDesignation(),
					'id'=>$r->getId(),
					'reference'=>$r->getReference(),
					'designation'=>$r->getDesignation(),
					'description'=>$r->getDescription(),
					'unitPrice'=>$r->getUnitPrice(),
					'purchase'=>$r->getPurchase(),
					'discountSupplier'=>$r->getDiscountSupplier(),
					'expenseRatio'=>$r->getExpenseRatio(),
					'shipping'=>$r->getShipping(),
					'transmitter'=> ($r->getCategory()->getId() == 1)
				);
		}
		return $r2;
	}
	
	public function getTotal()
	{
		$qb = $this->createQueryBuilder('p')
		->select('COUNT(p)');
		
		return (int) $qb->getQuery()
		->getSingleScalarResult();
	}
}